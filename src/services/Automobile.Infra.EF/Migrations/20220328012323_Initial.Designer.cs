// <auto-generated />
using System;
using Automobile.Infra.EF.Configurations.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Automobile.Infra.EF.Migrations
{
    [DbContext(typeof(AutomobileContext))]
    [Migration("20220328012323_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Automobile.Domain.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ProprietarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProprietarioId")
                        .IsUnique();

                    b.ToTable("ProprietarioEnderecos");
                });

            modelBuilder.Entity("Automobile.Domain.Entities.Proprietario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cancelado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Proprietarios");
                });

            modelBuilder.Entity("Automobile.Domain.Entitites.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cancelado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Automobile.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("Automobile.Domain.Entities.Proprietario", "Proprietario")
                        .WithOne("Endereco")
                        .HasForeignKey("Automobile.Domain.Entities.Endereco", "ProprietarioId")
                        .IsRequired();

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("Automobile.Domain.Entities.Proprietario", b =>
                {
                    b.OwnsOne("Automobile.Domain.Entities.Objects.Documento", "Documento", b1 =>
                        {
                            b1.Property<Guid>("ProprietarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("NumeroDocumento")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("varchar(14)")
                                .HasColumnName("NumeroDocumento");

                            b1.Property<int>("TipoDocumento")
                                .HasColumnType("int")
                                .HasColumnName("TipoDocumento");

                            b1.HasKey("ProprietarioId");

                            b1.ToTable("Proprietarios");

                            b1.WithOwner()
                                .HasForeignKey("ProprietarioId");
                        });

                    b.OwnsOne("Automobile.Domain.Entities.Objects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("ProprietarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("ProprietarioId");

                            b1.ToTable("Proprietarios");

                            b1.WithOwner()
                                .HasForeignKey("ProprietarioId");
                        });

                    b.Navigation("Documento");

                    b.Navigation("Email");
                });

            modelBuilder.Entity("Automobile.Domain.Entities.Proprietario", b =>
                {
                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
